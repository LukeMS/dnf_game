Changes:
- SRD bestiary integration;
- SRD weapons! :)
- prototyp SRD char creation (randomic, ui to manually create missing)


I suspect that the vast majority of games would be satisfied with five core data structures: player, enemies, playing field, pick-ups and effects. You may even be able to collapse e.g. player and enemy together.

level: {
    # every object is somewhere
    (0,1): {
        base: Floor,
        objects: [],
        creatures: [],
        changed: False
        owner: VaultRoom<35>
    }
    # but there are groups to speed up some needs
    groups: {
        rooms: ,
        halls: ,
        traps:
    }
    meta: {
        desc: "I'm a lava level with tons of demons and elementals. Iron will melt here, so no swords for you.",
        effects: 1 fire dmg per turn
        cr: 35
        fav_items: fire_affinity, 25%, (cr)+1
        fav_mobs: fire_affinity, 50%, (cr)0
    }


}

class Tile
    base
    object
    creature
    changed

update
for x in screen
    for y in screen
        if tile.changed and tile.base.visible
            for layer in tile.drawable():
                layer.draw()
            update_list.append(tile.rect)
pygame.display.update(update_list)
update_list = []

logic
for actable in level.actable
        for members in tile.acting()
            member.act()
